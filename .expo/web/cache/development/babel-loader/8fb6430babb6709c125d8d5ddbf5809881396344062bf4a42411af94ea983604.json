{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport categoriaService from \"../../services/categorias\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Categorias() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    categorias = _useState2[0],\n    setCategorias = _useState2[1];\n  var getCategorias = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var data = yield categoriaService.getAllCategorias();\n      setCategorias(data);\n    });\n    return function getCategorias() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(_asyncToGenerator(function* () {\n    getCategorias();\n  }), []);\n  var updateCategorias = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      yield getCategorias();\n    });\n    return function updateCategorias() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.titulo,\n        children: \"Categorias\"\n      })\n    }), _jsx(ScrollView, {\n      showsHorizontalScrollIndicator: false,\n      horizontal: true,\n      style: styles.lista,\n      children: _jsx(_Fragment, {\n        children: categorias.map(function (categoria) {\n          return _jsx(List.Item, {\n            title: categoria.descricao\n          }, categoria.id);\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginVertical: 30,\n    marginHorizontal: 0,\n    backgroundColor: '#0000'\n  },\n  header: {\n    marginLeft: 20\n  },\n  titulo: {\n    fontSize: 23,\n    fontWeight: 'bold'\n  },\n  lista: {\n    marginTop: 10,\n    paddingLeft: 20\n  },\n  item: {\n    marginRight: 15,\n    alignItems: 'center'\n  },\n  imagem: {\n    width: 100,\n    height: 120,\n    borderRadius: 10\n  },\n  categoriaTitulo: {\n    fontSize: 16,\n    marginTop: 10,\n    color: '#999'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Image","ScrollView","Text","TouchableOpacity","View","StyleSheet","categoriaService","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Categorias","_useState","_useState2","_slicedToArray","categorias","setCategorias","getCategorias","_ref","_asyncToGenerator","data","getAllCategorias","apply","arguments","updateCategorias","_ref3","style","styles","container","children","header","titulo","showsHorizontalScrollIndicator","horizontal","lista","map","categoria","List","Item","title","descricao","id","create","marginVertical","marginHorizontal","backgroundColor","marginLeft","fontSize","fontWeight","marginTop","paddingLeft","item","marginRight","alignItems","imagem","width","height","borderRadius","categoriaTitulo","color"],"sources":["/home/gustavo.marcellino/Imagens/Strong-Nutrition/src/components/Home/Categorias.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport categoriaService from '../../services/categorias';\n// import api from '../../services/api';\n\nexport default function Categorias() {\n  const [categorias, setCategorias] = useState([]);\n\n  const getCategorias = async () => {\n    const data = await categoriaService.getAllCategorias();\n    setCategorias(data);\n  };\n\n  useEffect(async () => {\n    getCategorias();\n  }, []);\n\n  const updateCategorias = async () => {\n    await getCategorias();\n  };\n  // const [categorias, setCategorias] = useState([]);\n\n  // useEffect(() => {\n  //   async function carregarCategorias() {\n  //     const response = await api.get('categories');\n  //     setCategorias(response.data);\n  //   }\n  //   carregarCategorias();\n  // }, []);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.titulo}>Categorias</Text>\n      </View>\n      <ScrollView\n        showsHorizontalScrollIndicator={false}\n        horizontal\n        style={styles.lista}\n      >\n        <>\n        {categorias.map((categoria) => (\n          <List.Item key={categoria.id} title={categoria.descricao} />\n        ))}\n      </>\n        {/* {categorias.map((categoria) => (\n          <TouchableOpacity key={categoria.id} style={styles.item}>\n            <Image\n              source={{ uri: categoria.image }} \n              style={styles.imagem}\n            />\n            <Text style={styles.categoriaTitulo}>{categoria.title}</Text>\n          </TouchableOpacity>\n        ))} */}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 30,\n    marginHorizontal: 0,\n    backgroundColor: '#0000'\n  },\n  header: {\n    marginLeft: 20,\n  },\n  titulo: {\n    fontSize: 23,\n    fontWeight: 'bold',\n  },\n  lista: {\n    marginTop: 10,\n    paddingLeft: 20,\n  },\n  item: {\n    marginRight: 15,\n    alignItems: 'center',\n  },\n  imagem: {\n    width: 100,\n    height: 120,\n    borderRadius: 10,\n  },\n  categoriaTitulo: {\n    fontSize: 16,\n    marginTop: 10,\n    color: '#999',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}